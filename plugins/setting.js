const config = require('../config');
const { cmd, commands } = require('../command');
const os = require("os");

cmd({
    pattern: "settings",
    alias: ["setting"],
    desc: "Configure bot settings",
    category: "owner",
    react: "‚öô",
    filename: __filename
},
async (conn, mek, m, { from, isOwner, quoted, reply }) => {
    if (!isOwner) return reply("‚ùå You are not the owner!");

    try {
        const settingsMenu = `*üåü Manoj-Ai Settings Panel üåü*

‚ï≠‚îÄ‚îÄ‚îÄ‚ùñ Work Mode
‚îÇ 1.1 Public Mode ü´Ç
‚îÇ 1.2 Private Mode ‚ùó
‚îÇ 1.3 Group Only üë•
‚îÇ 1.4 Inbox Only üë§
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

‚ï≠‚îÄ‚îÄ‚îÄ‚ùñ Auto Voice
‚îÇ 2.1 Enable üîõ
‚îÇ 2.2 Disable üì¥
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

‚ï≠‚îÄ‚îÄ‚îÄ‚ùñ Auto Status Seen
‚îÇ 3.1 Enable üîõ
‚îÇ 3.2 Disable üì¥
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

‚ï≠‚îÄ‚îÄ‚îÄ‚ùñ Auto Sticker
‚îÇ 4.1 Enable üîõ
‚îÇ 4.2 Disable üì¥
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

‚ï≠‚îÄ‚îÄ‚îÄ‚ùñ Auto Reply
‚îÇ 5.1 Enable üîõ
‚îÇ 5.2 Disable üì¥
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

‚ï≠‚îÄ‚îÄ‚îÄ‚ùñ Bot Online/Offline
‚îÇ 6.1 Online üîõ
‚îÇ 6.2 Offline üì¥
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

‚ï≠‚îÄ‚îÄ‚îÄ‚ùñ Message Read
‚îÇ 7.1 Enable üîõ
‚îÇ 7.2 Disable üì¥
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

‚ï≠‚îÄ‚îÄ‚îÄ‚ùñ Message React
‚îÇ 8.1 Enable üîõ
‚îÇ 8.2 Disable üì¥
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

‚ï≠‚îÄ‚îÄ‚îÄ‚ùñ Anti Link
‚îÇ 9.1 Enable üîõ
‚îÇ 9.2 Disable üì¥
‚îÇ 9.3 Enable + Remove ‚õî
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

‚ï≠‚îÄ‚îÄ‚îÄ‚ùñ Auto Status React & Reply
‚îÇ 10.1 Status React Enable üîõ
‚îÇ 10.2 Status React Disable üì¥
‚îÇ 10.3 Status Reply Enable üîõ
‚îÇ 10.4 Status Reply Disable üì¥
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

üî¢ *Reply with the option number to change setting.*
Powered by ùêåùêÄùêçùêéùêâ-ùêÄùêà üëÅÔ∏è`;

        const settingsMsg = await conn.sendMessage(from, {
            image: { url: "https://files.catbox.moe/zxtxit.jpg" },
            caption: settingsMenu,
        }, { quoted: mek });

        conn.ev.on('messages.upsert', async (msgUpdate) => {
            const msg = msgUpdate.messages[0];
            if (!msg.message || !msg.message.extendedTextMessage) return;

            const selectedOption = msg.message.extendedTextMessage.text.trim();
            const contextMsgId = msg.message.extendedTextMessage.contextInfo?.stanzaId;

            if (contextMsgId === settingsMsg.key.id) {
                const updates = {
                    '1.1': '.update MODE:public',
                    '1.2': '.update MODE:private',
                    '1.3': '.update MODE:group',
                    '1.4': '.update MODE:inbox',
                    '2.1': '.update AUTO_VOICE:true',
                    '2.2': '.update AUTO_VOICE:false',
                    '3.1': '.update AUTO_READ_STATUS:true',
                    '3.2': '.update AUTO_READ_STATUS:false',
                    '4.1': '.update AUTO_STICKER:true',
                    '4.2': '.update AUTO_STICKER:false',
                    '5.1': '.update AUTO_REPLY:true',
                    '5.2': '.update AUTO_REPLY:false',
                    '6.1': '.update ALLWAYS_OFFLINE:false',
                    '6.2': '.update ALLWAYS_OFFLINE:true',
                    '7.1': '.update READ_MESSAGE:true',
                    '7.2': '.update READ_MESSAGE:false',
                    '8.1': '.update AUTO_REACT:true',
                    '8.2': '.update AUTO_REACT:false',
                    '9.1': '.update ANTI_LINK:true',
                    '9.2': '.update ANTI_LINK:false',
                    '9.3': '.update ANTI_LINK:false\n.update ANTI_LINKK:false',
                    '10.1': '.update AUTO_REACT_STATUS:true',
                    '10.2': '.update AUTO_REACT_STATUS:false',
                    '10.3': '.update AUTO_STATUS_REPLY:true',
                    '10.4': '.update AUTO_STATUS_REPLY:false',
                };

                if (updates[selectedOption]) {
                    const updateCommand = updates[selectedOption];

                    // Send the update command
                    await reply(updateCommand);

                    // Add success confirmation
                    await reply('‚úÖ Setting updated successfully!');

                    // Optional: react to user message with a green tick
                    await conn.sendMessage(from, { react: { text: '‚úÖ', key: msg.key } });
                } else {
                    await reply("‚ùå Invalid option. Please select a valid number from the list!");
                }
            }
        });

    } catch (error) {
        console.error(error);
        await conn.sendMessage(from, { react: { text: '‚ùå', key: mek.key } });
        reply('‚ùå An error occurred while processing your request. Please try again later.');
    }
});